{"version":3,"sources":["../divider/index.jsx","views/home/setting/account/index.tsx"],"names":["__rest","s","e","t","Object","i","p","props","getPrefixCls","customizePrefixCls","type","orientation","className","children","dashed","restProps","prefixCls","orientationPrefix","classString","classNames","role","connect","userInfo","user","withRouter","password","useFormInput","useState","sckey","setSckey","passwordValue","value","trim","handleUpdateUser","useCallback","length","message","warn","serviceUpdateUser","md5","handleSckey","serviceUpdateUserConfig","useEffect","serviceGetUserConfig","then","res","data","success","serverChanSckey","layout","style","width","Item","label","defaultValue","loginName","readOnly","disabled","maxLength","onClick","onChange","target","textAlign","marginTop","href"],"mappings":"4dAAA,IAAIA,EAAkC,SAAUC,EAAGC,GAC/C,IAAIC,EAAJ,GACA,IAAK,IAAL,OAAqBC,2CAA8CF,aAAlD,IACbC,KAAOF,EAAPE,IACJ,GAAIF,SAAJ,oBAAwBG,OAAP,sBACR,KAAIC,EAAJ,EAAL,IAAgBC,EAAIF,6BAApB,GAAqDC,EAAIC,EAAzD,OAAmED,IAC3DH,UAAUI,EAAVJ,OAAuBE,6CAA8CE,EAAzED,MACIF,EAAEG,EAAFH,IAAUF,EAAEK,EAAZH,KAEZ,UAmBJ,IAdgB,SAAAI,GAAK,OAAK,0BACrB,YAAsB,MAAnBC,EAAmB,EAAnBA,aACeC,EAAiGF,EAD7F,YAC6FA,EAD7F,KACgBG,OADhB,uBAC6FH,EAD7F,YACqCI,OADrC,iBAC6DC,EAAgCL,EAD7F,UACwEM,EAAqBN,EAD7F,SACkFO,EAAWP,EAD7F,OACoGQ,EAAYf,EAAOO,EAAO,CAAC,YAAa,OAAQ,cAAe,YAAa,WADhL,WAEjBS,EAAYR,EAAa,UAA/B,GACMS,EAAoBN,yBAA1B,EACMO,EAAcC,IAAWP,EAAWI,EAAW,GAAvB,uGAA9B,IAIA,OAAQ,yBAAKJ,UAAWM,GAAhB,GAA4CE,KAAK,cAClDP,GAAY,wBAAMD,UAAS,4BADlC,S,mKC8DWS,uBAJS,SAAC,GACvB,MAAO,CAAEC,SADoE,EAApDC,KACDD,YAGXD,CAAyBG,aArEe,YAAyB,IAAbF,EAAY,EAAZA,SAC3DG,EAAWC,YAAa,IAD+C,EAEnDC,mBAAS,IAF0C,mBAEtEC,EAFsE,KAE/DC,EAF+D,KAGvEC,EAAgBL,EAASM,MAAMC,OAE/BC,EAAmBC,uBAAY,WAC/BJ,EAAcK,OAAS,EACzBC,IAAQC,KAAK,mCAGfC,YAAkB,CAAEb,SAAUc,IAAIT,OACjC,CAACA,IAEEU,EAAcN,uBAAY,WACzBN,EAKLa,YAAwB,CAAEb,UAJxBQ,IAAQC,KAAK,yCAKd,CAACT,IAWJ,OATAc,qBAAU,WACRC,cACCC,MAAK,SAAAC,GACAA,EAAIC,KAAKC,SACXlB,EAASgB,EAAIC,KAAKA,KAAKE,sBAG1B,IAGD,yBAAKpC,UAAU,mBACb,kBAAC,IAAD,CAASD,YAAY,QAArB,4BACA,kBAAC,IAAD,CAAMsC,OAAO,WAAWC,MAAO,CAAEC,MAAO,UACtC,kBAAC,IAAKC,KAAN,CAAWC,MAAM,sBACf,kBAAC,IAAD,CAAOC,aAAchC,EAASiC,UAAWC,UAAQ,EAACC,UAAQ,KAE5D,kBAAC,IAAKL,KAAN,CAAWC,MAAM,gBACf,kBAAC,IAAD,eAAO3C,KAAK,WAAWgD,UAAW,IAAQjC,KAE5C,kBAAC,IAAK2B,KAAN,KACE,kBAAC,IAAD,CAAQ1C,KAAK,UAAUiD,QAAS1B,GAAhC,kBAGJ,kBAAC,IAAD,CAAStB,YAAY,QAArB,4BACA,kBAAC,IAAD,CAAMsC,OAAO,WAAWC,MAAO,CAAEC,MAAO,UACtC,kBAAC,IAAKC,KAAN,CAAWC,MAAM,SACf,kBAAC,IAAD,CACEK,UAAW,IACX3B,MAAOH,EACPgC,SAAU,SAAA1D,GAAC,OAAI2B,EAAS3B,EAAE2D,OAAO9B,UAEnC,yBAAKmB,MAAO,CAAEY,UAAW,QAASC,UAAW,QAC3C,uBAAGC,KAAK,qBAAqBH,OAAO,UAApC,oCAGJ,kBAAC,IAAKT,KAAN,KACE,kBAAC,IAAD,CAAQ1C,KAAK,UAAUiD,QAASnB,GAAhC","file":"static/js/6.4588379a.chunk.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nconst Divider = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, type = 'horizontal', orientation = 'center', className, children, dashed } = props, restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n    const prefixCls = getPrefixCls('divider', customizePrefixCls);\n    const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n    const classString = classNames(className, prefixCls, `${prefixCls}-${type}`, {\n        [`${prefixCls}-with-text${orientationPrefix}`]: children,\n        [`${prefixCls}-dashed`]: !!dashed,\n    });\n    return (<div className={classString} {...restProps} role=\"separator\">\n          {children && <span className={`${prefixCls}-inner-text`}>{children}</span>}\n        </div>);\n}}\n  </ConfigConsumer>);\nexport default Divider;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport md5 from 'blueimp-md5';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@/store';\nimport { UserInfoProps } from '@/store/reducers/user';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { useFormInput } from '@/hooks';\nimport { serviceUpdateUser, serviceGetUserConfig, serviceUpdateUserConfig } from '@/services';\nimport {\n  Form, Input, Button, message, Divider\n} from 'antd';\n\ntype Props = {\n  userInfo: UserInfoProps;\n}\n\nconst Account: React.FC<Props & RouteComponentProps> = function ({ userInfo }) {\n  const password = useFormInput('');\n  const [sckey, setSckey] = useState('');\n  const passwordValue = password.value.trim();\n\n  const handleUpdateUser = useCallback(() => {\n    if (passwordValue.length < 6) {\n      message.warn('密码至少6位');\n      return;\n    }\n    serviceUpdateUser({ password: md5(passwordValue) });\n  }, [passwordValue]);\n\n  const handleSckey = useCallback(() => {\n    if (!sckey) {\n      message.warn('请正确填写SCKEY');\n      return;\n    }\n\n    serviceUpdateUserConfig({ sckey });\n  }, [sckey]);\n\n  useEffect(() => {\n    serviceGetUserConfig()\n    .then(res => {\n      if (res.data.success) {\n        setSckey(res.data.data.serverChanSckey);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"account-setting\">\n      <Divider orientation=\"left\">修改密码</Divider>\n      <Form layout=\"vertical\" style={{ width: '300px' }}>\n        <Form.Item label=\"登录名\">\n          <Input defaultValue={userInfo.loginName} readOnly disabled />\n        </Form.Item>\n        <Form.Item label=\"密码\">\n          <Input type=\"password\" maxLength={32} {...password} />\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" onClick={handleUpdateUser}>提交</Button>\n        </Form.Item>\n      </Form>\n      <Divider orientation=\"left\">Server酱配置</Divider>\n      <Form layout=\"vertical\" style={{ width: '300px' }}>\n        <Form.Item label=\"SCKEY\">\n          <Input \n            maxLength={100} \n            value={sckey} \n            onChange={e => setSckey(e.target.value)} \n          />\n          <div style={{ textAlign: 'right', marginTop: '5px' }}>\n            <a href=\"http://sc.ftqq.com\" target=\"_blank\">如何获取？</a>\n          </div>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" onClick={handleSckey}>提交</Button>\n        </Form.Item>\n      </Form>\n    </div>\n  )\n};\n\nconst mapStateToProps = ({ user }: StoreState): { userInfo: UserInfoProps } => {\n  return { userInfo: user.userInfo };\n};\n\nexport default connect(mapStateToProps)(withRouter(Account));\n"],"sourceRoot":""}