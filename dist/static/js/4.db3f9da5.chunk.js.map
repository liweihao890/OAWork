{"version":3,"sources":["../divider/index.jsx","assets/img/common/user-poster.png","views/home/setting/base/index.tsx"],"names":["__rest","s","e","t","Object","i","p","props","getPrefixCls","customizePrefixCls","type","orientation","className","children","dashed","restProps","prefixCls","orientationPrefix","classString","classNames","role","module","exports","Meta","Card","connect","userInfo","user","withRouter","MetaDesc","loginName","bio","email","location","createdAt","style","width","cover","alt","src","require","avatar","avatarUrl","size","title","username","description"],"mappings":"4dAAA,IAAIA,EAAkC,SAAUC,EAAGC,GAC/C,IAAIC,EAAJ,GACA,IAAK,IAAL,OAAqBC,2CAA8CF,aAAlD,IACbC,KAAOF,EAAPE,IACJ,GAAIF,SAAJ,oBAAwBG,OAAP,sBACR,KAAIC,EAAJ,EAAL,IAAgBC,EAAIF,6BAApB,GAAqDC,EAAIC,EAAzD,OAAmED,IAC3DH,UAAUI,EAAVJ,OAAuBE,6CAA8CE,EAAzED,MACIF,EAAEG,EAAFH,IAAUF,EAAEK,EAAZH,KAEZ,UAmBJ,IAdgB,SAAAI,GAAK,OAAK,0BACrB,YAAsB,MAAnBC,EAAmB,EAAnBA,aACeC,EAAiGF,EAD7F,YAC6FA,EAD7F,KACgBG,OADhB,uBAC6FH,EAD7F,YACqCI,OADrC,iBAC6DC,EAAgCL,EAD7F,UACwEM,EAAqBN,EAD7F,SACkFO,EAAWP,EAD7F,OACoGQ,EAAYf,EAAOO,EAAO,CAAC,YAAa,OAAQ,cAAe,YAAa,WADhL,WAEjBS,EAAYR,EAAa,UAA/B,GACMS,EAAoBN,yBAA1B,EACMO,EAAcC,IAAWP,EAAWI,EAAW,GAAvB,uGAA9B,IAIA,OAAQ,yBAAKJ,UAAWM,GAAhB,GAA4CE,KAAK,cAClDP,GAAY,wBAAMD,UAAS,4BADlC,S,0CCvBJS,EAAOC,QAAU,IAA0B,yC,iCCA3C,+EASQC,EAASC,IAATD,KA6COE,uBAJS,SAAC,GACvB,MAAO,CAAEC,SADoE,EAApDC,KACDD,YAGXD,CAAyBG,aAvCY,YAAyB,IAAbF,EAAY,EAAZA,SAExDG,EACJ,yBAAKjB,UAAU,aACb,6BAAMc,EAASI,WACf,kDAASJ,EAASK,KAClB,kDAASL,EAASM,OAClB,kDAASN,EAASO,UAClB,8DAAWP,EAASQ,YAIxB,OACE,yBAAKtB,UAAU,gBACb,kBAAC,IAAD,CAASD,YAAY,QAArB,4BACA,kBAAC,IAAD,CACEwB,MAAO,CAAEC,MAAO,KAChBC,MACE,yBACEC,IAAI,GACJC,IAAKC,EAAQ,KACb5B,UAAU,YAId,kBAACW,EAAD,CACEkB,OAAQ,kBAAC,IAAD,CAAQF,IAAKb,EAASgB,UAAWC,KAAK,UAC9CC,MAAOlB,EAASmB,SAChBC,YAAajB","file":"static/js/4.db3f9da5.chunk.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nconst Divider = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, type = 'horizontal', orientation = 'center', className, children, dashed } = props, restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n    const prefixCls = getPrefixCls('divider', customizePrefixCls);\n    const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n    const classString = classNames(className, prefixCls, `${prefixCls}-${type}`, {\n        [`${prefixCls}-with-text${orientationPrefix}`]: children,\n        [`${prefixCls}-dashed`]: !!dashed,\n    });\n    return (<div className={classString} {...restProps} role=\"separator\">\n          {children && <span className={`${prefixCls}-inner-text`}>{children}</span>}\n        </div>);\n}}\n  </ConfigConsumer>);\nexport default Divider;\n","module.exports = __webpack_public_path__ + \"static/media/user-poster.1f95f36b.png\";","import React from 'react';\nimport './style.scss';\nimport Avatar from '@/components/avatar';\nimport { Card, Divider } from 'antd';\nimport { connect } from 'react-redux';\nimport { StoreState } from '@/store';\nimport { UserInfoProps } from '@/store/reducers/user';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\n\nconst { Meta } = Card;\n\ntype Props = {\n  userInfo: UserInfoProps;\n}\n\nconst Base: React.FC<Props & RouteComponentProps> = function ({ userInfo }) {\n  \n  const MetaDesc = (\n    <div className=\"meta-desc\">\n      <div>{userInfo.loginName}</div>\n      <div>简介：{userInfo.bio}</div>\n      <div>邮箱：{userInfo.email}</div>\n      <div>地区：{userInfo.location}</div>\n      <div>注册时间：{userInfo.createdAt}</div>\n    </div>\n  );\n\n  return (\n    <div className=\"setting-base\">\n      <Divider orientation=\"left\">个人中心</Divider>\n      <Card\n        style={{ width: 350 }}\n        cover={\n          <img\n            alt=\"\"\n            src={require('@/assets/img/common/user-poster.png')}\n            className=\"poster\"\n          />\n        }\n      >\n        <Meta\n          avatar={<Avatar src={userInfo.avatarUrl} size=\"large\" />}\n          title={userInfo.username}\n          description={MetaDesc}\n        />\n      </Card>\n    </div>\n  )\n};\n\nconst mapStateToProps = ({ user }: StoreState): { userInfo: UserInfoProps } => {\n  return { userInfo: user.userInfo };\n};\n\nexport default connect(mapStateToProps)(withRouter(Base));\n"],"sourceRoot":""}